//font 字体
var _dll = aaz.libxl._dll;

namespace aaz.libxl;
class font{    
	ctor(handle){
		if(!handle) return ;
		this.handle = handle;
	}
	
	@_metaProperty;
}
namespace font{
    _properties = {
   		size = {
   			_get = function(){ 
   				return _dll.xlFontSize(owner.handle);
   			}
   			
   			_set = function(v){
   				_dll.xlFontSetSize(owner.handle, v);
   			} 	
   		}
   		
   		italic = {
   			_get = function(){ 
   				return _dll.xlFontItalic(owner.handle);
   			}
   			
   			_set = function(v){
   				_dll.xlFontSetItalic(owner.handle, v);
   			} 	
   		}
   		
   		strikeOut = {
   			_get = function(){ 
   				return _dll.xlFontStrikeOut(owner.handle);
   			}
   			
   			_set = function(v){
   				_dll.xlFontSetStrikeOut(owner.handle, v);
   			} 	
   		}
   		
   		color = {
   			_get = function(){ 
   				return _dll.xlFontColor(owner.handle);
   			}
   			
   			_set = function(v){
   				_dll.xlFontSetColor(owner.handle, v);
   			} 	
   		}
   		
   		bold = {
   			_get = function(){ 
   				return _dll.xlFontBold(owner.handle);
   			}
   			
   			_set = function(v){
   				_dll.xlFontSetBold(owner.handle, v);
   			} 	
   		}
   		
   		script = {
   			_get = function(){ 
   				return _dll.xlFontScript(owner.handle);
   			}
   			
   			_set = function(v){
   				_dll.xlFontSetScript(owner.handle, v);
   			} 	
   		}
   		
   		underline = {
   			_get = function(){ 
   				return _dll.xlFontUnderline(owner.handle);
   			}
   			
   			_set = function(v){
   				_dll.xlFontSetUnderline(owner.handle, v);
   			} 	
   		}
   		
   		name = {
   			_get = function(){ 
   				return ..raw.str( _dll.xlFontNameP(owner.handle), true );
   			}
   			
   			_set = function(v){
   				_dll.xlFontSetName(owner.handle, v);
   			} 	
   		}
    }
    
    _metaProperty = ..aaz.libxl.metaProperty( _properties );
}
