//format 格式
var _dll = aaz.libxl._dll;

namespace aaz.libxl;
class format{    
	ctor( handle ){
		if( !handle ) return ; 
		this.handle = handle;
	}
	
	@_metaProperty;	
}
namespace format{
     _properties = {
    	font = {
    		_get = function(){ 
    			return ..aaz.libxl.font(_dll.xlFormatFontP(owner.handle));
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetFont(owner.handle, v);
    		} 	
    	}
    	
    	numFormat = {
    		_get = function( ){ 
    			return _dll.xlFormatNumFormat(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetNumFormat(owner.handle, v);
    		} 	
    	}
    	
    	alignH = {
    		_get = function( ){ 
    			return _dll.xlFormatAlignH(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetAlignH(owner.handle, v);
    		} 	
    	}
    	
    	alignV = {
    		_get = function( ){ 
    			return _dll.xlFormatAlignV(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetAlignV(owner.handle, v);
    		} 	
    	}
    	
    	wrap = {
    		_get = function( ){ 
    			return _dll.xlFormatWrap(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetWrap(owner.handle, v);
    		} 	
    	}
    	
    	rotation = {
    		_get = function( ){ 
    			return _dll.xlFormatRotation(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetRotation(owner.handle, v);
    		} 	
    	}
    	
    	indent = {
    		_get = function( ){ 
    			return _dll.xlFormatIndent(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetIndent(owner.handle, v);
    		} 	
    	}
    	
    	shrinkToFit = {
    		_get = function( ){ 
    			return _dll.xlFormatShrinkToFit(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetShrinkToFit(owner.handle, v);
    		} 	
    	}
   	
    	border = {
    		_set = function(v){
    			_dll.xlFormatSetBorder(owner.handle, v);
    		} 	
    	}
    	
    	borderColor = {
    		_set = function(v){
    			_dll.xlFormatSetBorderColor(owner.handle, v);
    		} 	
    	}
    	
    	borderLeft = {
    		_get = function( ){ 
    			return _dll.xlFormatBorderLeft(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetBorderLeft(owner.handle, v);
    		} 	
    	}
    	
    	borderRight = {
    		_get = function( ){ 
    			return _dll.xlFormatBorderRight(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetBorderRight(owner.handle, v);
    		} 	
    	}
    	  	
    	borderTop = {
    		_get = function( ){ 
    			return _dll.xlFormatBorderTop(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetBorderTop(owner.handle, v);
    		} 	
    	}
    	
    	borderBottom = {
    		_get = function( ){ 
    			return _dll.xlFormatBorderBottom(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetBorderBottom(owner.handle, v);
    		} 	
    	}
    	
    	borderLeftColor = {
    		_get = function( ){ 
    			return _dll.xlFormatBorderLeftColor(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetBorderLeftColor(owner.handle, v);
    		} 	
    	}
    	
    	borderRightColor = {
    		_get = function( ){ 
    			return _dll.xlFormatBorderRightColor(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetBorderRightColor(owner.handle, v);
    		} 	
    	}
    	
    	borderTopColor = {
    		_get = function( ){ 
    			return _dll.xlFormatBorderTopColor(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetBorderTopColor(owner.handle, v);
    		} 	
    	}
    	
    	bottomColor = {
    		_get = function( ){ 
    			return _dll.xlFormatBorderBottomColor(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetBorderBottomColor(owner.handle, v);
    		} 	
    	}
    	
    	borderDiagonal = {
    		_get = function( ){ 
    			return _dll.xlFormatBorderDiagonal(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetBorderDiagonal(owner.handle, v);
    		} 	
    	}
    	
    	borderDiagonalStyle = {
    		_get = function(){ 
    			return _dll.xlFormatBorderDiagonalStyle(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetBorderDiagonalStyle(owner.handle, v);
    		} 	
    	}
    	
    	borderDiagonalColor = {
    		_get = function(){ 
    			return _dll.xlFormatBorderDiagonalColor(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetBorderDiagonalColor(owner.handle, v);
    		} 	
    	}
    	
    	fillPattern = {
    		_get = function( ){ 
    			return _dll.xlFormatFillPattern(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetFillPattern(owner.handle, v);
    		} 	
    	}
    	
    	patternForegroundColor = {
    		_get = function( ){ 
    			return _dll.xlFormatPatternForegroundColor(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetPatternForegroundColor(owner.handle, v);
    		} 	
    	}
    	
    	patternBackgroundColor = {
    		_get = function( ){ 
    			return _dll.xlFormatPatternBackgroundColor(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetPatternBackgroundColor(owner.handle, v);
    		} 	
    	}
    	
    	locked = {
    		_get = function( ){ 
    			return _dll.xlFormatLocked(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetLocked(owner.handle, v);
    		} 	
    	}
    	
    	hidden = {
    		_get = function( ){ 
    			return _dll.xlFormatHidden(owner.handle);
    		}
    		
    		_set = function(v){
    			_dll.xlFormatSetHidden(owner.handle, v);
    		} 	
    	}
     }
     
    _metaProperty = ..aaz.libxl.metaProperty( _properties )
}

